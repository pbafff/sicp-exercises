#lang sicp

(define (A x y)
  (cond ((= y 0) 0)
        ((= x 0) (* 2 y))
        ((= y 1) 2)
        (else (A (- x 1)
                 (A x (- y 1))))))

(A 1 10)
(A 2 4)
(A 3 3)

(define (f n) (A 0 n)) ;; f = 2n
(define (g n) (A 1 n)) ;; g = 2^n
(define (h n) (A 2 n)) ;; h = 2↑↑n

(h 1) ;; 2^1     = 2^(2^0)
(h 2) ;; 2^2     = 2^(2^1)
(h 3) ;; 2^4     = 2^(2^2)
(h 4) ;; 2^16    = 2^(2^2^2)
#;
(h 5) ;; 2^65536 = 2^(2^2^2^2)

(log (h 5) 2)

(A 3 1)
(A 3 2)
(A 3 3) ;; = 2↑↑↑3